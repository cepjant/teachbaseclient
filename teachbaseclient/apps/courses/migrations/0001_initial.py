# Generated by Django 4.2 on 2023-05-08 01:33

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django_unixdatetimefield.fields


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Author",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("name", models.TextField(verbose_name="first name")),
                ("email", models.TextField(verbose_name="email")),
                ("phone", models.TextField(verbose_name="phone")),
                ("last_name", models.TextField(verbose_name="last name")),
                ("auth_type", models.IntegerField(verbose_name="auth type")),
                (
                    "last_activity_at",
                    django_unixdatetimefield.fields.UnixDateTimeField(
                        verbose_name="last activity at"
                    ),
                ),
                ("is_active", models.BooleanField(verbose_name="is active")),
            ],
            options={
                "verbose_name": "author",
                "verbose_name_plural": "authors",
            },
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("name", models.TextField(verbose_name="name")),
                (
                    "content_type",
                    models.PositiveIntegerField(verbose_name="content type"),
                ),
                ("thumb_url", models.TextField(verbose_name="thumb url")),
                ("cover_url", models.TextField(verbose_name="cover url")),
                ("description", models.TextField(verbose_name="description")),
                ("last_activity", models.DateTimeField(verbose_name="last activity")),
                (
                    "total_score",
                    models.PositiveIntegerField(verbose_name="total score"),
                ),
                (
                    "total_tasks",
                    models.PositiveIntegerField(verbose_name="total tasks"),
                ),
                ("is_netology", models.BooleanField(verbose_name="netology")),
                ("bg_url", models.TextField(verbose_name="bg url")),
                ("video_url", models.TextField(verbose_name="video url")),
                ("demo", models.BooleanField(verbose_name="demo")),
                ("unchangeable", models.BooleanField(verbose_name="unchangeable")),
                (
                    "include_weekly_report",
                    models.BooleanField(verbose_name="include weekly report"),
                ),
                (
                    "custom_author_names",
                    models.TextField(verbose_name="custom author names"),
                ),
                (
                    "custom_contents_link",
                    models.TextField(verbose_name="custom contents link"),
                ),
                (
                    "hide_viewer_navigation",
                    models.BooleanField(verbose_name="hide viewer navigation"),
                ),
                ("duration", models.PositiveIntegerField(verbose_name="duration")),
                (
                    "competences",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.TextField(),
                        size=None,
                        verbose_name="competences",
                    ),
                ),
                (
                    "authors",
                    models.ManyToManyField(to="courses.author", verbose_name="authors"),
                ),
            ],
            options={
                "verbose_name": "course",
                "verbose_name_plural": "courses",
            },
        ),
        migrations.CreateModel(
            name="CourseType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("name", models.TextField(verbose_name="name")),
            ],
            options={
                "verbose_name": "course type",
                "verbose_name_plural": "course types",
            },
        ),
        migrations.CreateModel(
            name="Owner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="name")),
            ],
            options={
                "verbose_name": "course owner",
                "verbose_name_plural": "course owners",
            },
        ),
        migrations.CreateModel(
            name="Poll",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("required", models.BooleanField(verbose_name="required")),
                ("introduction", models.TextField(verbose_name="introduction")),
                ("final_message", models.TextField(verbose_name="final message")),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
            ],
            options={
                "verbose_name": "poll",
                "verbose_name_plural": "polls",
            },
        ),
        migrations.CreateModel(
            name="Section",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("draft", models.BooleanField(verbose_name="draft")),
                ("icon_url", models.TextField(verbose_name="icon url")),
                ("small_url", models.TextField(verbose_name="small url")),
                ("thumb_url", models.TextField(verbose_name="thumb url")),
                (
                    "icon_content_type",
                    models.TextField(verbose_name="icon content type"),
                ),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.course",
                        verbose_name="course",
                    ),
                ),
                (
                    "polls",
                    models.ManyToManyField(to="courses.poll", verbose_name="polls"),
                ),
            ],
            options={
                "verbose_name": "course section",
                "verbose_name_plural": "course sections",
            },
        ),
        migrations.CreateModel(
            name="XAPIPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
                ("name", models.TextField(verbose_name="name")),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.section",
                        verbose_name="section",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Task",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("position", models.IntegerField(verbose_name="position")),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("description", models.TextField(verbose_name="description")),
                ("score", models.IntegerField(verbose_name="score")),
                ("required", models.BooleanField(verbose_name="required")),
                ("team_passage", models.BooleanField(verbose_name="team passage")),
                (
                    "allow_incomplete_score",
                    models.BooleanField(verbose_name="allow incomplete score"),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.section",
                        verbose_name="section",
                    ),
                ),
            ],
            options={
                "verbose_name": "task",
                "verbose_name_plural": "tasks",
            },
        ),
        migrations.CreateModel(
            name="ScormPackage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.IntegerField(verbose_name="position")),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("description", models.TextField(verbose_name="description")),
                ("score", models.IntegerField(verbose_name="score")),
                ("resource_url", models.TextField(verbose_name="resource url")),
                (
                    "attachment_status",
                    models.TextField(verbose_name="attachment status"),
                ),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.section",
                        verbose_name="section",
                    ),
                ),
            ],
            options={
                "verbose_name": "scorm package",
                "verbose_name_plural": "scorm packages",
            },
        ),
        migrations.CreateModel(
            name="Quizz",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("position", models.IntegerField(verbose_name="position")),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("weight", models.IntegerField(verbose_name="weight")),
                ("total_score", models.IntegerField(verbose_name="total score")),
                (
                    "questions_count",
                    models.IntegerField(verbose_name="questions count"),
                ),
                ("required", models.BooleanField(verbose_name="required")),
                ("options", models.JSONField(verbose_name="options")),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.section",
                        verbose_name="section",
                    ),
                ),
            ],
            options={
                "verbose_name": "quizz",
                "verbose_name_plural": "quizzes",
            },
        ),
        migrations.CreateModel(
            name="Material",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(verbose_name="created at")),
                ("updated_at", models.DateTimeField(verbose_name="updated at")),
                ("position", models.IntegerField(verbose_name="position")),
                (
                    "section_position",
                    models.IntegerField(verbose_name="section position"),
                ),
                ("name", models.TextField(verbose_name="name")),
                ("description", models.TextField(verbose_name="description")),
                ("is_external", models.BooleanField(verbose_name="is external")),
                ("external_type", models.TextField(verbose_name="external type")),
                ("has_file", models.BooleanField(verbose_name="has file")),
                ("extension", models.TextField(verbose_name="extension")),
                ("file_name", models.TextField(verbose_name="file name")),
                (
                    "file_content_type",
                    models.TextField(verbose_name="file content type"),
                ),
                ("category", models.TextField(verbose_name="category")),
                ("file_size", models.IntegerField(verbose_name="file size")),
                ("size", models.TextField(verbose_name="size")),
                ("thumb_url", models.TextField(verbose_name="thumb url")),
                ("view_url", models.TextField(verbose_name="view url")),
                ("view_url_cors", models.TextField(verbose_name="view url cors")),
                (
                    "poster_url",
                    models.TextField(blank=True, null=True, verbose_name="poster url"),
                ),
                ("status_code", models.TextField(verbose_name="status code")),
                ("status_name", models.TextField(verbose_name="status name")),
                (
                    "section",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.section",
                        verbose_name="section",
                    ),
                ),
            ],
            options={
                "verbose_name": "course material",
                "verbose_name_plural": "course materials",
            },
        ),
        migrations.AddField(
            model_name="course",
            name="owner",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="courses.owner",
                verbose_name="owner",
            ),
        ),
        migrations.AddField(
            model_name="course",
            name="types",
            field=models.ManyToManyField(to="courses.coursetype", verbose_name="types"),
        ),
    ]
